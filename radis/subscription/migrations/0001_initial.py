# Generated by Django 5.0.7 on 2024-08-06 15:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('procrastinate', '0028_add_cancel_states'),
        ('reports', '0011_report_patient_age'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionAppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Subscription app settings',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.CharField(max_length=100)),
                ('patient_id', models.CharField(blank=True, max_length=100)),
                ('query', models.CharField(max_length=200)),
                ('study_date_from', models.DateField(blank=True, null=True)),
                ('study_date_till', models.DateField(blank=True, null=True)),
                ('study_description', models.CharField(blank=True, max_length=200)),
                ('patient_sex', models.CharField(blank=True, choices=[('', 'All'), ('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('age_from', models.IntegerField(blank=True, null=True)),
                ('age_till', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_refreshed', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='auth.group')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.language')),
                ('modalities', models.ManyToManyField(blank=True, to='reports.modality')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscribedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.report')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='subscription.subscription')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('UV', 'Unverified'), ('PR', 'Preparing'), ('PE', 'Pending'), ('IP', 'In Progress'), ('CI', 'Canceling'), ('CA', 'Canceled'), ('SU', 'Success'), ('WA', 'Warning'), ('FA', 'Failure')], default='UV', max_length=2)),
                ('urgent', models.BooleanField(default=False)),
                ('send_finished_mail', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_jobs', to=settings.AUTH_USER_MODEL)),
                ('queued_job', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='procrastinate.procrastinatejob')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='subscription.subscription')),
            ],
            options={
                'permissions': [('can_analyze_urgently', 'Can analyze urgently')],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PE', 'Pending'), ('IP', 'In Progress'), ('CA', 'Canceled'), ('SU', 'Success'), ('WA', 'Warning'), ('FA', 'Failure')], default='PE', max_length=2)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('message', models.TextField(blank=True, default='')),
                ('log', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='subscription.subscriptionjob')),
                ('queued_job', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='procrastinate.procrastinatejob')),
                ('reports', models.ManyToManyField(blank=True, to='reports.report')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='subscription',
            constraint=models.UniqueConstraint(fields=('name', 'owner_id'), name='unique_subscription_name_per_user'),
        ),
        migrations.AddIndex(
            model_name='subscriptionjob',
            index=models.Index(fields=['owner', 'status'], name='subscriptio_owner_i_f2f611_idx'),
        ),
    ]
