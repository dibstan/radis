x-app: &default-app
  image: radis_dev:latest
  volumes:
    - ..:/app
  env_file:
    - ../.env.dev
  environment:
    ENABLE_REMOTE_DEBUGGING: 0
    DJANGO_SETTINGS_MODULE: "radis.settings.development"
  pull_policy: never # only works with Docker Compose and not Docker Swarm

x-llamacpp: &llamacpp
  environment:
    LLAMA_CACHE: "/models"
  env_file:
    - ../.env.dev
  hostname: llamacpp.local
  ports:
    - 9610:8080
  volumes:
    - models_data:/models

services:
  init:
    <<: *default-app
    profiles:
      - never

  web:
    <<: *default-app
    build:
      target: development
    ports:
      - "${RADIS_HOST_PORT:-8000}:8000"
      - "${RADIS_DEBUG_PORT:-5678}:5678"
    volumes:
      # Cave, overwrites the above anchor
      - ..:/app
      - vscode-server:/root/.vscode-server/extensions
      - vscode-server-insiders:/root/.vscode-server-insiders/extensions
    command: >
      bash -c "
        wait-for-it -s postgres.local:5432 -t 60 && 
        ./manage.py migrate &&
        ./manage.py collectstatic --no-input &&
        ./manage.py populate_users_and_groups --users 20 --groups 3 &&
        ./manage.py populate_reports --report-language de &&
        ./manage.py runserver 0.0.0.0:8000
      "

  worker_default:
    <<: *default-app
    command: >
      bash -c "
        wait-for-it -s postgres.local:5432 -t 60 &&
        ./manage.py bg_worker -l debug -q default --autoreload
      "

  worker_llm:
    <<: *default-app
    command: >
      bash -c "
        wait-for-it -s postgres.local:5432 -t 60 &&
        ./manage.py bg_worker -l debug -q llm --autoreload
      "

  llamacpp_cpu:
    <<: *llamacpp
    image: ghcr.io/ggerganov/llama.cpp:server
    entrypoint: "/bin/bash -c '/llama-server -mu $${LLM_MODEL_URL} -c 4096 --host 0.0.0.0 --port 8080 --threads 8 --threads-http 8 --parallel 8 --cont-batching'"
    profiles: ["cpu"]

  llamacpp_gpu:
    <<: *llamacpp
    image: ghcr.io/ggerganov/llama.cpp:server-cuda
    entrypoint: "/bin/bash -c '/llama-server -mu $${LLM_MODEL_URL} -ngl 99 -c 4096 --host 0.0.0.0 --port 8080 --threads 8 --threads-http 8 --parallel 8 --cont-batching'"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles: ["gpu"]

  postgres:
    environment:
      POSTGRES_PASSWORD: "postgres"

volumes:
  vscode-server:
  vscode-server-insiders:
  models_data:
