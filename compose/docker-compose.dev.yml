version: "3.8"

x-app: &default-app
  image: radis_dev:latest
  volumes:
    - ..:/app
  env_file:
    - ../.env.dev
  environment:
    ENABLE_REMOTE_DEBUGGING: 0
    DJANGO_SETTINGS_MODULE: "radis.settings.development"
  pull_policy: never # only works with Docker Compose and not Docker Swarm

services:
  web:
    <<: *default-app
    build:
      target: development
    ports:
      - "${RADIS_HOST_PORT:-8000}:8000"
      - "${RADIS_DEBUG_PORT:-5678}:5678"
    volumes:
      # Cave, overwrites the above anchor
      - ..:/app
      - vscode-server:/root/.vscode-server/extensions
      - vscode-server-insiders:/root/.vscode-server-insiders/extensions
    command: >
      bash -c "
        wait-for-it -s postgres.local:5432 -t 60 && 
        ./manage.py migrate &&
        ./manage.py collectstatic --no-input &&
        wait-for-it -s vespa.local:19071 -t 60 &&
        ./manage.py setup_vespa --generate --deploy &&
        ./manage.py populate_users_and_groups --users 20 --groups 3 &&
        ./manage.py populate_reports --report-language de &&
        ./manage.py runserver 0.0.0.0:8000
      "
    profiles:
      - full
      - web

  worker_default:
    <<: *default-app
    command: |
      ./manage.py celery_worker -c 1 -Q default_queue --autoreload
    profiles:
      - full

  worker_vespa:
    <<: *default-app
    command: |
      ./manage.py celery_worker -c 1 -Q vespa_queue --autoreload
    profiles:
      - full

  worker_llm:
    <<: *default-app
    command: |
      ./manage.py celery_worker -c 1 -Q llm_queue --autoreload
    profiles:
      - full

  celery_beat:
    <<: *default-app
    command: |
      ./manage.py celery_beat --autoreload
    profiles:
      - full

  flower:
    <<: *default-app
    profiles:
      - full

  llamacpp:
    ports:
      - 9610:8080
    volumes:
      - ../models:/models
    command: "-m /models/model.gguf -c 512 --host 0.0.0.0 --port 8080"
    profiles:
      - full

  postgres:
    environment:
      POSTGRES_PASSWORD: "postgres"
    profiles:
      - full
      - web

  vespa:
    environment:
      # Reduce memory usage of Vespa during development (espcially on Cloud IDEs), see
      # https://docs.vespa.ai/en/operations/node-setup.html#memory-settings
      VESPA_CONFIGSERVER_JVMARGS: "-Xms32M -Xmx128M"
      VESPA_CONFIGPROXY_JVMARGS: "-Xms32M -Xmx32M"
    ports:
      - 9620:8080
    profiles:
      - full
      - web

  rabbit:
    profiles:
      - full

  redis:
    profiles:
      - full

volumes:
  vscode-server:
  vscode-server-insiders:
